iven an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times.

You may assume that the array is non-empty and the majority element always exist in the array.

Example 1:

Input: [3,2,3]
Output: 3
Example 2:

Input: [2,2,1,1,1,2,2]
Output: 2


class Solution:
    def majorityElement(self, nums: List[int]) -> int:
        if len(nums) <= 1:
            return nums[0]
        keypoint = len(nums) /2
        elementDict = dict()
        for i in nums:
            if i in elementDict:
                elementDict[i] = elementDict[i] + 1
                if elementDict[i] > keypoint:
                    return i
            else:
                elementDict[i] = 1
    
Solution: Use a dictionary to store the number of occurrences of all elements, 
When an element appears more than half the number of the length of the entire array, that element could be returned as the result
